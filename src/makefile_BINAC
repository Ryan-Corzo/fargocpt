### Modules I used on the BINAC cluster
### 1) compiler/gnu/5.2                           2) mpi/openmpi/1.10.3-gnu-5.2                 3) numlib/fftw/3.3.5-openmpi-1.10.3-gnu-5.2 

# current git commit
GIT_COMMIT = "$(shell git rev-parse HEAD)"
GIT_CHANGED = "$(shell git diff-index --name-only HEAD | sed -e '{:q;N;s/\n/, /g;t q}')"

# options to compile
OPTIONS = -D_TRAP_FPE -D_GNU_SOURCE -DGIT_COMMIT='$(GIT_COMMIT)' -DGIT_CHANGED='$(GIT_CHANGED)' -DNDEBUG
#OPTIONS = -D_TRAP_FPE -D_GNU_SOURCE -DGIT_COMMIT='$(GIT_COMMIT)' -DGIT_CHANGED='$(GIT_CHANGED)'

# (MPI)-C compiler to use
#CC = /opt/bwhpc/common/compiler/intel/2016u3/impi/5.1.3.223/bin64/mpicc
CC = mpicc
# (MPI)-C++ compiler to use
CXX = mpic++
#CXX = /opt/bwhpc/common/compiler/intel/2016u3/impi/5.1.3.223/bin64/mpicxx

# C Flags
CFLAGS = -O3 -Wall -march=native -Wno-unknown-pragmas -ggdb
# C++ Flags
CXXFLAGS = $(CFLAGS)

# use special MPI/FFTW libs
MPI_PREFIX = /opt/bwhpc/common/compiler/intel/2016u3/impi/5.1.3.223
FFTW_PREFIX= /opt/bwhpc/common/numlib/fftw/3.3.5-impi-5.1.3-intel-16.0 
#GSL_PREFIX = /home-link/zxmpd54/Applications/gsl-2.1 #/opt/bwhpc/common/numlib/gsl/2.1
GSL_PREFIX = /opt/bwhpc/common/numlib/gsl/2.1

_CFLAGS = $(OPTIONS) $(CFLAGS) -I$(FFTW_INC_DIR) -I$(MPI_INC_DIR) -I$(GSL_PREFIX)/include
_CXXFLAGS = $(OPTIONS) $(CXXFLAGS) -I$(FFTW_INC_DIR) -I$(MPI_INC_DIR) -I$(GSL_PREFIX)/include

SRCS_C = $(wildcard *.c)
SRCS_CXX = $(wildcard *.cpp)
SRCS = $(SRCS_C) $(SRCS_CXX)
OBJS_C = $(SRCS_C:%.c=%.o)
OBJS_CXX = $(SRCS_CXX:%.cpp=%.o)
OBJS = $(OBJS_C) $(OBJS_CXX)
HDRS = $(wildcard *.h)
TEMP = $(SRCS:%=%~) $(HDRS:%=%~)

LIBS = -lm -L$(MPI_LIB_DIR) -lmpi -L$(FFTW_LIB_DIR) -I$(FFTW_INC_DIR) -lfftw3_mpi -lfftw3 -L$(GSL_PREFIX)/lib64 -I$(GSL_PREFIX)/include -lgsl -lgslcblas
# -Wl,--rpath -Wl,$(FFTW_PREFIX)/lib 

EXENAME        = ../fargo

$(EXENAME): $(OBJS)
	$(CXX) $(OBJS) $(_CFLAGS) -o $(EXENAME) $(LIBS)

$(OBJS): $(HDRS) makefile

main.o: $(HDRS) makefile $(SRCS_C) $(SRCS_CXX)

.PHONY: clean

clean:
	rm -f $(OBJS) $(TEMP)

%.o : %.c
	$(CC) $*.c -c $(_CFLAGS)

%.o : %.cpp
	$(CXX) $*.cpp -c $(_CXXFLAGS)
